
declare_proto {
    fn print(msg: string) -> void {}
    fn putc(c: char) -> void {}
    fn printNumber(n: long) -> void {}
    fn readLine -> string {}
}

class Object {
	hash: long
	fn construct () -> void {}
	fn destruct () -> void {}
	fn _op_equals (other: Object) -> bool => false
	fn to_string () -> string => "Object"
	fn to_hash () -> long => hash
}

class vec3 {
	x: double
	y: double
	z: double

	fn construct(x: double, y: double, z: double) {
		this.x = x
		this.y = y
		this.z = z
	}

	fn _op_add(o: vec3) -> vec3
		=> vec3(x + o.x, y + o.y, z + o.z)

	fn _op_sub(o: vec3) -> vec3
		=> vec3(x - o.x, y - o.y, z - o.z)
}

namespace pkg_cont {
	class contTest {
		a: int

		fn construct(a: int) {
			this.a = a
		}
	}

	namespace pkg {

		class Test: Object {
			a: int

			fn construct(a: int) {
				this.a = a
			}

			fn getA -> int => a

			fn setA (a: int) -> int => this.a = a
		}

		a: Test = Test(1)
		b: contTest = contTest(2)

		fn test {
			print(a.to_string())
		}

	}
}

fn main() {
	var a: pkg_cont.contTest
	var b: pkg_cont.pkg.Test
}
